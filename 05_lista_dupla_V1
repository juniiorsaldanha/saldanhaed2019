#include <iostream>
using namespace std;

struct Node{
    int value;
    Node * next;
    Node * prev;
    Node(int value = 0, Node * next = nullptr, Node * prev = nullptr){
        this->value = value;
        this->next = next;
        this->prev = prev;
    }
};

struct Lista{
    
    Node *one;

    Lista(){
        one = new Node();
        one->prev = one;
        one->next = one;
    }


   void show(int esc){
      cout << "[ ";
        Node *node = one;

        while(node->next != one){
                cout << node->value << " ";
                node = node->next;
        }

        cout << "]\n";
    }

    void push_back(int value){
        Node *node = new Node(value, one, one->prev);
        if(one->next == one){
            one->next = node; 
            one = node; 
            one->prev = one; 
        }
        else{
            one->prev->next = node; 
            one->prev = node; 
        }
    }

    void remove(Node * ref){
        if(ref == one){
            one->prev->next = one->next; 
            one->next->prev = one->prev;
            one = one->next;            
        }
        else{
            ref->prev->next = ref->next;
            ref->next->prev = ref->prev;
        }
        delete ref;
    }
};

int main(){

    Lista lista; 

int size;
int esc; 

cin >> size >> esc; 

for(int i = 0; i < size; i++)
    lista.push_back(i + 1); 

Node *aux = lista.one; 

while(aux->value != esc){
    aux = aux->next;
}

while(lista.one != lista.one->next){
        lista.show(esc);
        lista.remove(aux->next);
        aux = aux->next;
        esc = aux->value;
    }
    return 0;

}
